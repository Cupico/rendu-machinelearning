{"ast":null,"code":"var _jsxFileName = \"/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n  const [turn, setTurn] = useState(0);\n  const rows = 6;\n  const columns = 7;\n  const humain = \"yellow\";\n  const ia = \"red\"; // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = e => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = e.row;\n    let column = e.column;\n    let getBoard = [...board]; // let rowLength = getBoard.length;\n\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = []; //\n\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      } // Check nombre de lignes déjà remplies\n\n\n      let foundFullRow = getBoard.filter(e => e[0] !== 0 && e[1] !== 0 && e[2] !== 0 && e[3] !== 0 && e[4] !== 0 && e[5] !== 0 && e[6] !== 0);\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n\n        case 1:\n          rowLength = 4;\n          break;\n\n        case 2:\n          rowLength = 3;\n          break;\n\n        case 3:\n          rowLength = 2;\n          break;\n\n        case 4:\n          rowLength = 1;\n          break;\n\n        case 5:\n          rowLength = 0;\n          break;\n\n        default:\n          rowLength = 5;\n      }\n\n      for (let i = 0; i < rowLength; i++) {\n        for (let j = 0; j < columnLength; j++) {\n          // Last\n          if (getBoard[rowLength - i][j] === 0) {\n            //\n            if (rowFindCase.includes(1) || rowFindCase.includes(2)) {\n              let howMany1 = rowFindCase.filter(e => e !== 0);\n              row = 5 - howMany1.length;\n              getBoard[row][column] = player === 1 ? 1 : 2;\n            } else {\n              row = rowLength;\n              getBoard[rowLength][column] = player === 1 ? 1 : 2;\n            }\n          } //\n          // if (getBoard[row][column] !== 0) {\n          //   i = rowLength;\n          //   j = columnLength;\n          //   break;\n          // }\n\n        }\n      }\n\n      setBoard(getBoard);\n      setTurn(prevState => prevState + 1);\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n      console.log(\"getboard\", getBoard); // let getColumns = [[], [], [], [], [], []];\n      // for (let i = 0; i < getBoard.length; i++) {\n      //   for (let j = 0; j < 7; j++) {\n      //     if (getColumns[i]) getColumns[i] = [...getColumns[i], getBoard[i][j]];\n      //   }\n      //   console.log(\"columnns\", getColumns);\n      // }\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n            i;\n\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n\n        return indexes;\n      };\n\n      let left;\n      let right;\n      let up;\n      console.log(getBoard[5]);\n\n      if (getBoard[5].includes(2)) {\n        console.log(\"yes\");\n        let foundIndex = getAllIndexes(getBoard[5], 2);\n\n        for (let i = 0; i < foundIndex.length; i++) {\n          if (getBoard[5][foundIndex[i] - 1] && getBoard[5][foundIndex[i] - 1] === 0) {\n            console.log(\"ok\");\n            left = foundIndex[i] - 1;\n          } else if (getBoard[5][foundIndex[i] + 1] && getBoard[5][foundIndex[i] + 1] === 0) {\n            right = foundIndex[i] + 1;\n          } // else if(getBoard[5][ i + 1] && getBoard[5][ i + 1] === 0){\n          //   newMoveIndex = getBoard[5][ i + 1]\n          // }\n\n        }\n      }\n\n      console.log(\"left\", left);\n      console.log(\"right\", right); // for (let j = 0; j < getBoard[5].length; j++) {\n      //   if (getBoard[5][j] === 2) {\n      //     foundPosition = [\n      //       ...foundPosition,\n      //       getBoard[5].findIndex((e) => e === 2),\n      //     ];\n      //   }\n      //   console.log(\"pos\", foundPosition);\n\n      let filterRow;\n      filterRow = getBoard.find(e => e.includes(2));\n      let indexRow;\n      let indexColumn;\n\n      if (filterRow) {\n        indexRow = filterRow.findIndex(e => e === 2);\n\n        if (indexRow >= 0) {\n          indexColumn = filterRow.findIndex(e => e === 2);\n        }\n      }\n\n      let nextMove;\n\n      if (indexRow >= 0 && indexColumn >= 0) {\n        // getBoard[indexRow][indexColumn]\n        nextMove = {\n          row: indexRow,\n          column: indexColumn + 1\n        };\n      }\n\n      let case0 = 3;\n\n      if (nextMove) {\n        handleClick({\n          row: nextMove.row,\n          column: nextMove.column\n        });\n        console.log(nextMove);\n      } else {\n        handleClick({\n          row: 0,\n          column: 3\n        });\n      }\n    }\n  }, [turn, board]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tour : \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), board.length > 0 && board.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: e.map((f, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n        id: `button${i}-${j}`,\n        style: {\n          width: \"70px\",\n          height: \"70px\"\n        },\n        value: i,\n        name: j,\n        onClick: e => handleClick({\n          row: e.target.value,\n          column: e.target.name\n        })\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ap0XzacKSRFQC0TLmVGQhc/yqeE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js"],"names":["useState","useEffect","App","board","setBoard","humainCoup","setHumainCoup","iaCoup","setIaCoup","turn","setTurn","rows","columns","humain","ia","plateau","i","j","handleClick","e","player","console","log","row","column","getBoard","rowLength","columnLength","rowFindCase","length","foundFullRow","filter","includes","howMany1","prevState","button","document","getElementById","style","backgroundColor","getAllIndexes","arr","val","indexes","push","left","right","up","foundIndex","filterRow","find","indexRow","indexColumn","findIndex","nextMove","case0","map","display","f","width","height","target","value","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [board, setBoard] = useState([]);\n\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n\n  const [turn, setTurn] = useState(0);\n\n  const rows = 6;\n  const columns = 7;\n\n  const humain = \"yellow\";\n  const ia = \"red\";\n\n  // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = (e) => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = e.row;\n    let column = e.column;\n\n    let getBoard = [...board];\n\n    // let rowLength = getBoard.length;\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = [];\n      //\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      }\n\n      // Check nombre de lignes déjà remplies\n      let foundFullRow = getBoard.filter(\n        (e) =>\n          e[0] !== 0 &&\n          e[1] !== 0 &&\n          e[2] !== 0 &&\n          e[3] !== 0 &&\n          e[4] !== 0 &&\n          e[5] !== 0 &&\n          e[6] !== 0\n      );\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n        case 1:\n          rowLength = 4;\n          break;\n        case 2:\n          rowLength = 3;\n          break;\n        case 3:\n          rowLength = 2;\n          break;\n        case 4:\n          rowLength = 1;\n          break;\n        case 5:\n          rowLength = 0;\n          break;\n        default:\n          rowLength = 5;\n      }\n\n      for (let i = 0; i < rowLength; i++) {\n        for (let j = 0; j < columnLength; j++) {\n          // Last\n          if (getBoard[rowLength - i][j] === 0) {\n            //\n            if (rowFindCase.includes(1) || rowFindCase.includes(2)) {\n              let howMany1 = rowFindCase.filter((e) => e !== 0);\n              row = 5 - howMany1.length;\n              getBoard[row][column] = player === 1 ? 1 : 2;\n            } else {\n              row = rowLength;\n              getBoard[rowLength][column] = player === 1 ? 1 : 2;\n            }\n          }\n          //\n          // if (getBoard[row][column] !== 0) {\n          //   i = rowLength;\n          //   j = columnLength;\n          //   break;\n          // }\n        }\n      }\n\n      setBoard(getBoard);\n\n      setTurn((prevState) => prevState + 1);\n\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n      console.log(\"getboard\", getBoard);\n\n      // let getColumns = [[], [], [], [], [], []];\n\n      // for (let i = 0; i < getBoard.length; i++) {\n      //   for (let j = 0; j < 7; j++) {\n      //     if (getColumns[i]) getColumns[i] = [...getColumns[i], getBoard[i][j]];\n      //   }\n      //   console.log(\"columnns\", getColumns);\n      // }\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n          i;\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n        return indexes;\n      };\n\n      let left;\n      let right;\n      let up;\n\n      console.log(getBoard[5]);\n      if (getBoard[5].includes(2)) {\n        console.log(\"yes\");\n\n        let foundIndex = getAllIndexes(getBoard[5], 2);\n\n        for (let i = 0; i < foundIndex.length; i++) {\n          if (getBoard[5][foundIndex[i] - 1] && getBoard[5][foundIndex[i] - 1] === 0) {\n            console.log(\"ok\")\n            left = foundIndex[i] - 1;\n          } else if (getBoard[5][foundIndex[i] + 1] && getBoard[5][foundIndex[i] + 1] === 0) {\n            right = foundIndex[i] + 1\n          }\n          // else if(getBoard[5][ i + 1] && getBoard[5][ i + 1] === 0){\n          //   newMoveIndex = getBoard[5][ i + 1]\n          // }\n        }\n      }\n\n      console.log(\"left\", left)\n      console.log(\"right\", right)\n\n      // for (let j = 0; j < getBoard[5].length; j++) {\n      //   if (getBoard[5][j] === 2) {\n      //     foundPosition = [\n      //       ...foundPosition,\n      //       getBoard[5].findIndex((e) => e === 2),\n      //     ];\n      //   }\n      //   console.log(\"pos\", foundPosition);\n\n      let filterRow;\n      filterRow = getBoard.find((e) => e.includes(2));\n\n      let indexRow;\n      let indexColumn;\n\n      if (filterRow) {\n        indexRow = filterRow.findIndex((e) => e === 2);\n\n        if (indexRow >= 0) {\n          indexColumn = filterRow.findIndex((e) => e === 2);\n        }\n      }\n\n      let nextMove;\n      if (indexRow >= 0 && indexColumn >= 0) {\n        // getBoard[indexRow][indexColumn]\n        nextMove = { row: indexRow, column: indexColumn + 1 };\n      }\n\n      let case0 = 3;\n\n      if (nextMove) {\n        handleClick({ row: nextMove.row, column: nextMove.column });\n        console.log(nextMove);\n      } else {\n        handleClick({ row: 0, column: 3 });\n      }\n    }\n  }, [turn, board]);\n\n  return (\n    <div className=\"App\">\n      <h2>Tour : {turn}</h2>\n      <br />\n      {board.length > 0 &&\n        board.map((e, i) => (\n          <div key={i} style={{ display: \"flex\" }}>\n            {e.map((f, j) => (\n              <button\n                id={`button${i}-${j}`}\n                style={{\n                  width: \"70px\",\n                  height: \"70px\",\n                }}\n                key={j}\n                value={i}\n                name={j}\n                onClick={(e) =>\n                  handleClick({ row: e.target.value, column: e.target.name })\n                }\n              ></button>\n            ))}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}