{"ast":null,"code":"var _jsxFileName = \"/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n  const [turn, setTurn] = useState(0);\n  const rows = 6;\n  const columns = 7;\n  const humain = \"yellow\";\n  const ia = \"red\"; // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = e => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = parseFloat(e.row);\n    let column = parseFloat(e.column);\n    const buttonCheck = document.getElementById(`button${row}-${column}`);\n\n    if (buttonCheck && (buttonCheck.style.backgroundColor === \"red\" || buttonCheck.style.backgroundColor === \"yellow\")) {\n      setTurn(prevState => prevState + 2);\n    }\n\n    let getBoard = [...board]; // let rowLength = getBoard.length;\n\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = []; //\n\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      } // Check nombre de lignes déjà remplies\n\n\n      let foundFullRow = getBoard.filter(e => e[0] !== 0 && e[1] !== 0 && e[2] !== 0 && e[3] !== 0 && e[4] !== 0 && e[5] !== 0 && e[6] !== 0);\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n\n        case 1:\n          rowLength = 4;\n          break;\n\n        case 2:\n          rowLength = 3;\n          break;\n\n        case 3:\n          rowLength = 2;\n          break;\n\n        case 4:\n          rowLength = 1;\n          break;\n\n        case 5:\n          rowLength = 0;\n          break;\n\n        default:\n          rowLength = 5;\n      }\n\n      for (let i = 0; i < rowLength; i++) {\n        for (let j = 0; j < columnLength; j++) {\n          // Last\n          if (getBoard[rowLength - i][j] === 0) {\n            //\n            if (rowFindCase.includes(1) || rowFindCase.includes(2)) {\n              let howMany1 = rowFindCase.filter(e => e !== 0);\n              row = 5 - howMany1.length;\n              getBoard[row][column] = player === 1 ? 1 : 2;\n            } else {\n              row = rowLength;\n              getBoard[rowLength][column] = player === 1 ? 1 : 2;\n            }\n          } // if (getBoard[row][column] !== 0) {\n          //   i = rowLength;\n          //   j = columnLength;\n          //   break;\n          // }\n\n        }\n      }\n\n      setBoard(getBoard);\n      setTurn(prevState => prevState + 1);\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n      console.log(\"getboard\", getBoard); // let getColumns = [[], [], [], [], [], []];\n      // for (let i = 0; i < getBoard.length; i++) {\n      //   for (let j = 0; j < 7; j++) {\n      //     if (getColumns[i]) getColumns[i] = [...getColumns[i], getBoard[i][j]];\n      //   }\n      //   console.log(\"columnns\", getColumns);\n      // }\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n            i;\n\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n\n        return indexes;\n      };\n\n      let left;\n      let right;\n      let up; // let currentRow;\n\n      let upRow;\n\n      for (let x = 0; x < getBoard.length; x++) {\n        if (getBoard[x].includes(2)) {\n          let foundIndex = getAllIndexes(getBoard[x], 2);\n\n          for (let i = 0; i < foundIndex.length; i++) {\n            //LEFT\n            if (getBoard[x][foundIndex[i] - 1] === 0) {\n              left = foundIndex[i] - 1;\n              upRow = x;\n            } else if (getBoard[x][foundIndex[i] - 1] !== 0 && getBoard[x][foundIndex[i] - 2] === 0) {\n              left = foundIndex[i] - 2;\n              upRow = x; //RIGHT\n            } else if (getBoard[x][foundIndex[i] + 1] === 0) {\n              right = foundIndex[i] + 1;\n              upRow = x;\n            } else if (getBoard[x][foundIndex[i] + 1] !== 0 && getBoard[x][foundIndex[i] + 2] === 0) {\n              right = foundIndex[i] + 2;\n              upRow = x; //UP\n            } else if (getBoard[x - 1][i] === 0) {\n              up = getBoard[x - 1][i];\n              upRow = x - 1;\n            } else if (getBoard[x - 1][i] !== 0 && getBoard[x - 2][i] === 0) {\n              up = getBoard[x - 2][i];\n              upRow = x - 2;\n            }\n          }\n        }\n      }\n\n      console.log(\"left\", left);\n      console.log(\"right\", right);\n      console.log(\"up\", up);\n      console.log(\"row\", upRow);\n\n      if ((left || right || up) && upRow) {\n        handleClick({\n          row: upRow,\n          column: left || right || up\n        });\n      } else if (!left || !right || !up) {\n        handleClick({\n          row: 0,\n          column: 3\n        });\n      }\n    }\n  }, [turn, board]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tour : \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), board.length > 0 && board.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: e.map((f, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n        id: `button${i}-${j}`,\n        style: {\n          width: \"70px\",\n          height: \"70px\"\n        },\n        value: i,\n        name: j,\n        onClick: e => handleClick({\n          row: e.target.value,\n          column: e.target.name\n        })\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ap0XzacKSRFQC0TLmVGQhc/yqeE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js"],"names":["useState","useEffect","App","board","setBoard","humainCoup","setHumainCoup","iaCoup","setIaCoup","turn","setTurn","rows","columns","humain","ia","plateau","i","j","handleClick","e","player","console","log","row","parseFloat","column","buttonCheck","document","getElementById","style","backgroundColor","prevState","getBoard","rowLength","columnLength","rowFindCase","length","foundFullRow","filter","includes","howMany1","button","getAllIndexes","arr","val","indexes","push","left","right","up","upRow","x","foundIndex","map","display","f","width","height","target","value","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [board, setBoard] = useState([]);\n\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n\n  const [turn, setTurn] = useState(0);\n\n  const rows = 6;\n  const columns = 7;\n\n  const humain = \"yellow\";\n  const ia = \"red\";\n\n  // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = (e) => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = parseFloat(e.row);\n    let column = parseFloat(e.column);\n\n    const buttonCheck = document.getElementById(`button${row}-${column}`);\n\n    if (buttonCheck && (buttonCheck.style.backgroundColor === \"red\" || buttonCheck.style.backgroundColor === \"yellow\")) {\n      setTurn(prevState => prevState + 2)\n    }\n\n    let getBoard = [...board];\n\n    // let rowLength = getBoard.length;\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = [];\n      //\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      }\n\n      // Check nombre de lignes déjà remplies\n      let foundFullRow = getBoard.filter(\n        (e) =>\n          e[0] !== 0 &&\n          e[1] !== 0 &&\n          e[2] !== 0 &&\n          e[3] !== 0 &&\n          e[4] !== 0 &&\n          e[5] !== 0 &&\n          e[6] !== 0\n      );\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n        case 1:\n          rowLength = 4;\n          break;\n        case 2:\n          rowLength = 3;\n          break;\n        case 3:\n          rowLength = 2;\n          break;\n        case 4:\n          rowLength = 1;\n          break;\n        case 5:\n          rowLength = 0;\n          break;\n        default:\n          rowLength = 5;\n      }\n\n      for (let i = 0; i < rowLength; i++) {\n        for (let j = 0; j < columnLength; j++) {\n          // Last\n          if (getBoard[rowLength - i][j] === 0) {\n            //\n            if (rowFindCase.includes(1) || rowFindCase.includes(2)) {\n              let howMany1 = rowFindCase.filter((e) => e !== 0);\n              row = 5 - howMany1.length;\n              getBoard[row][column] = player === 1 ? 1 : 2;\n            } else {\n              row = rowLength;\n              getBoard[rowLength][column] = player === 1 ? 1 : 2;\n            }\n          }\n          \n          // if (getBoard[row][column] !== 0) {\n          //   i = rowLength;\n          //   j = columnLength;\n          //   break;\n          // }\n        }\n      }\n\n      setBoard(getBoard);\n\n      setTurn((prevState) => prevState + 1);\n\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n      console.log(\"getboard\", getBoard);\n\n      // let getColumns = [[], [], [], [], [], []];\n\n      // for (let i = 0; i < getBoard.length; i++) {\n      //   for (let j = 0; j < 7; j++) {\n      //     if (getColumns[i]) getColumns[i] = [...getColumns[i], getBoard[i][j]];\n      //   }\n      //   console.log(\"columnns\", getColumns);\n      // }\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n          i;\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n        return indexes;\n      };\n\n      let left;\n      let right;\n      let up;\n      // let currentRow;\n      let upRow;\n\n      for (let x = 0; x < getBoard.length; x++) {\n        if (getBoard[x].includes(2)) {\n          let foundIndex = getAllIndexes(getBoard[x], 2);\n\n          for (let i = 0; i < foundIndex.length; i++) {\n            //LEFT\n            if (getBoard[x][foundIndex[i] - 1] === 0) {\n              left = foundIndex[i] - 1;\n              upRow = x;\n            } else if (\n              getBoard[x][foundIndex[i] - 1] !== 0 &&\n              getBoard[x][foundIndex[i] - 2] === 0\n            ) {\n              left = foundIndex[i] - 2;\n              upRow = x;\n              //RIGHT\n            } else if (getBoard[x][foundIndex[i] + 1] === 0) {\n              right = foundIndex[i] + 1;\n              upRow = x;\n            } else if (\n              getBoard[x][foundIndex[i] + 1] !== 0 &&\n              getBoard[x][foundIndex[i] + 2] === 0\n            ) {\n              right = foundIndex[i] + 2;\n              upRow = x;\n              //UP\n            } else if (getBoard[x - 1][i] === 0) {\n              up = getBoard[x - 1][i];\n              upRow = x - 1;\n            } else if (getBoard[x - 1][i] !== 0 && getBoard[x - 2][i] === 0 ) {\n              up = getBoard[x - 2][i];\n              upRow = x - 2;\n            }\n          }\n        }\n      }\n\n      console.log(\"left\", left);\n      console.log(\"right\", right);\n      console.log(\"up\", up);\n      console.log(\"row\", upRow);\n\n      if ((left || right || up) && upRow) {\n        handleClick({ row: upRow, column: left || right || up });\n      } else if (!left || !right || !up) {\n        handleClick({ row: 0, column: 3 });\n      }\n    }\n  }, [turn, board]);\n\n  return (\n    <div className=\"App\">\n      <h2>Tour : {turn}</h2>\n      <br />\n      {board.length > 0 &&\n        board.map((e, i) => (\n          <div key={i} style={{ display: \"flex\" }}>\n            {e.map((f, j) => (\n              <button\n                id={`button${i}-${j}`}\n                style={{\n                  width: \"70px\",\n                  height: \"70px\",\n                }}\n                key={j}\n                value={i}\n                name={j}\n                onClick={(e) =>\n                  handleClick({ row: e.target.value, column: e.target.name })\n                }\n              ></button>\n            ))}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}