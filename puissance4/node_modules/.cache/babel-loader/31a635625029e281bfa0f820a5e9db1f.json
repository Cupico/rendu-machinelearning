{"ast":null,"code":"var _jsxFileName = \"/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n  const [turn, setTurn] = useState(0);\n  const rows = 6;\n  const columns = 7;\n  const humain = \"yellow\";\n  const ia = \"red\"; // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = e => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = parseFloat(e.row);\n    let column = parseFloat(e.column); // const buttonCheck = document.getElementById(`button${row}-${column}`);\n    // if (buttonCheck && (buttonCheck.style.backgroundColor === \"red\" || buttonCheck.style.backgroundColor === \"yellow\")) {\n    //   setTurn(prevState => prevState + 1)\n    // }\n\n    let getBoard = [...board];\n    getBoard[row][column] = player;\n    setBoard(getBoard);\n    setTurn(prevState => prevState + 1);\n    const button = document.getElementById(`button${row}-${column}`);\n\n    if (button) {\n      if ((turn - 1) % 2 === 0) {\n        //pair\n        button.style.backgroundColor = \"yellow\";\n      } else {\n        // let rowIA = 3;\n        // let columnIA = 5;\n        // handleClick({row: rowIA, column: columnIA})\n        button.style.backgroundColor = \"red\";\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n            i;\n\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n\n        return indexes;\n      };\n\n      let nextMove = {\n        row: null,\n        column: null\n      }; // --------------------------------- Find NEXT MOVE --------------------------------- \\\\\n\n      for (let x = 0; x < getBoard.length; x++) {\n        if (getBoard[x].includes(2)) {\n          let foundIndex = getAllIndexes(getBoard[x], 2);\n\n          for (let i = 0; i < foundIndex.length; i++) {\n            //UP\n            if (getBoard[x - 1][i] === 0) {\n              nextMove.column = getBoard[x - 1][i];\n              nextMove.row = x - 1;\n            }\n\n            if (getBoard[x - 1][i] !== 0 && getBoard[x - 2][i] === 0) {\n              nextMove.column = getBoard[x - 2][i];\n              nextMove.row = x - 2;\n            } //LEFT\n\n\n            if (getBoard[x][foundIndex[i] - 1] === 0) {\n              nextMove.column = foundIndex[i] - 1;\n              nextMove.row = x;\n            }\n\n            if (getBoard[x][foundIndex[i] - 1] !== 0 && getBoard[x][foundIndex[i] - 2] === 0) {\n              nextMove.column = foundIndex[i] - 2;\n              nextMove.row = x; //RIGHT\n            }\n\n            if (getBoard[x][foundIndex[i] + 1] === 0) {\n              nextMove.column = foundIndex[i] + 1;\n              nextMove.row = x;\n            }\n\n            if (getBoard[x][foundIndex[i] + 1] !== 0 && getBoard[x][foundIndex[i] + 2] === 0) {\n              nextMove.column = foundIndex[i] + 2;\n              nextMove.row = x;\n            }\n          }\n        }\n      } // --------------------------------- DONT LOOSE BRO --------------------------------- \\\\\n      // const dontLoose = () => {\n      //     let playerWin;\n      //     for (let x = 0; x < getBoard.length; x++) {\n      //       playerWin = getAllIndexes(getBoard[x], 1);\n      //       for (let y = 0; y < playerWin.length; y++) {\n      //         // Check Horizontal si 2 jetons d'affilÃ©s\n      //         if(getBoard[x][playerWin[y]] === getBoard[x][playerWin[y + 1]]){\n      //           if(getBoard[x][playerWin[y - 1]] === 0){\n      //             nextMove.column = y - 1\n      //             nextMove.row = x\n      //           }\n      //           if(getBoard[x][playerWin[y + 2]] === 0){\n      //             nextMove.column = y + 2\n      //             nextMove.row = x\n      //           }\n      //         }\n      //         console.log(\"2 jeton d'affile \")\n      //     }\n      //   }\n      // };\n      // dontLoose();\n      // ----------------------------------------------------------------------------------- \\\\\n\n\n      console.log(\"left\", nextMove);\n\n      if (nextMove.column !== null && nextMove.row !== null) {\n        handleClick(nextMove);\n      } else {\n        handleClick({\n          row: 5,\n          column: 3\n        });\n      }\n    }\n  }, [turn, board]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tour : \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), board.length > 0 && board.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirectio: \"column\"\n      },\n      children: e.map((f, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n        id: `button${i}-${j}`,\n        style: {\n          width: \"70px\",\n          height: \"70px\"\n        },\n        value: i,\n        name: j,\n        onClick: e => handleClick({\n          row: e.target.value,\n          column: e.target.name\n        })\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ap0XzacKSRFQC0TLmVGQhc/yqeE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js"],"names":["useState","useEffect","App","board","setBoard","humainCoup","setHumainCoup","iaCoup","setIaCoup","turn","setTurn","rows","columns","humain","ia","plateau","i","j","handleClick","e","player","console","log","row","parseFloat","column","getBoard","prevState","button","document","getElementById","style","backgroundColor","getAllIndexes","arr","val","indexes","length","push","nextMove","x","includes","foundIndex","map","display","flexDirectio","f","width","height","target","value","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [board, setBoard] = useState([]);\n\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n\n  const [turn, setTurn] = useState(0);\n\n  const rows = 6;\n  const columns = 7;\n\n  const humain = \"yellow\";\n  const ia = \"red\";\n\n  // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = (e) => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = parseFloat(e.row);\n    let column = parseFloat(e.column);\n\n    // const buttonCheck = document.getElementById(`button${row}-${column}`);\n\n    // if (buttonCheck && (buttonCheck.style.backgroundColor === \"red\" || buttonCheck.style.backgroundColor === \"yellow\")) {\n    //   setTurn(prevState => prevState + 1)\n    // }\n\n    let getBoard = [...board];\n\n    getBoard[row][column] = player;\n\n      setBoard(getBoard);\n\n      setTurn((prevState) => prevState + 1);\n\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n          i;\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n        return indexes;\n      };\n\n      let nextMove = { row: null, column: null };\n\n      // --------------------------------- Find NEXT MOVE --------------------------------- \\\\\n\n      for (let x = 0; x < getBoard.length; x++) {\n        if (getBoard[x].includes(2)) {\n          let foundIndex = getAllIndexes(getBoard[x], 2);\n\n          for (let i = 0; i < foundIndex.length; i++) {\n            //UP\n            if (getBoard[x - 1][i] === 0) {\n              nextMove.column = getBoard[x - 1][i];\n              nextMove.row = x - 1;\n            }\n             if (getBoard[x - 1][i] !== 0 && getBoard[x - 2][i] === 0) {\n              nextMove.column = getBoard[x - 2][i];\n              nextMove.row = x - 2;\n            }\n            //LEFT\n             if (getBoard[x][foundIndex[i] - 1] === 0) {\n              nextMove.column = foundIndex[i] - 1;\n              nextMove.row = x;\n            } if (\n              getBoard[x][foundIndex[i] - 1] !== 0 &&\n              getBoard[x][foundIndex[i] - 2] === 0\n            ) {\n              nextMove.column = foundIndex[i] - 2;\n              nextMove.row = x;\n              //RIGHT\n            } if (getBoard[x][foundIndex[i] + 1] === 0) {\n              nextMove.column = foundIndex[i] + 1;\n              nextMove.row = x;\n            }  if (\n              getBoard[x][foundIndex[i] + 1] !== 0 &&\n              getBoard[x][foundIndex[i] + 2] === 0\n            ) {\n              nextMove.column = foundIndex[i] + 2;\n              nextMove.row = x;\n            }\n          }\n        }\n      }\n\n      // --------------------------------- DONT LOOSE BRO --------------------------------- \\\\\n\n      // const dontLoose = () => {\n      //     let playerWin;\n      //     for (let x = 0; x < getBoard.length; x++) {\n      //       playerWin = getAllIndexes(getBoard[x], 1);\n      //       for (let y = 0; y < playerWin.length; y++) {\n      //         // Check Horizontal si 2 jetons d'affilÃ©s\n      //         if(getBoard[x][playerWin[y]] === getBoard[x][playerWin[y + 1]]){\n      //           if(getBoard[x][playerWin[y - 1]] === 0){\n      //             nextMove.column = y - 1\n      //             nextMove.row = x\n      //           }\n      //           if(getBoard[x][playerWin[y + 2]] === 0){\n      //             nextMove.column = y + 2\n      //             nextMove.row = x\n      //           }\n      //         }\n      //         console.log(\"2 jeton d'affile \")\n      //     }\n      //   }\n      // };\n\n      // dontLoose();\n\n      // ----------------------------------------------------------------------------------- \\\\\n\n      console.log(\"left\", nextMove);\n      if (nextMove.column !== null && nextMove.row !== null) {\n        handleClick(nextMove);\n      } else {\n        handleClick({ row: 5, column: 3 });\n      }\n    }\n  }, [turn, board]);\n\n  return (\n    <div className=\"App\">\n      <h2>Tour : {turn}</h2>\n      <br />\n      {board.length > 0 &&\n        board.map((e, i) => (\n          <div key={i} style={{ display: \"flex\", flexDirectio:\"column\" }}>\n            {e.map((f, j) => (\n              <button\n                id={`button${i}-${j}`}\n                style={{\n                  width: \"70px\",\n                  height: \"70px\",\n                }}\n                key={j}\n                value={i}\n                name={j}\n                onClick={(e) =>\n                  handleClick({ row: e.target.value, column: e.target.name })\n                }\n              ></button>\n            ))}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}