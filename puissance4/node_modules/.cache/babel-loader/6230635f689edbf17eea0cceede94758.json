{"ast":null,"code":"var _jsxFileName = \"/Users/elbardavid/Desktop/puissance4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n  const [turn, setTurn] = useState(0);\n  const rows = 6;\n  const columns = 7;\n  const humain = \"yellow\";\n  const ia = \"red\"; // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = e => {\n    let player;\n\n    if ((turn - 1) % 2 === 0) {\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    console.log(player);\n    let row = e.row;\n    let column = e.column;\n    let getBoard = [...board]; // let rowLength = getBoard.length;\n\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = []; //\n\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      } // Check nombre de lignes déjà remplies\n\n\n      let foundFullRow = getBoard.filter(e => e[0] === 1 && e[1] === 1 && e[2] === 1 && e[3] === 1 && e[4] === 1 && e[5] === 1 && e[6] === 1);\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n\n        case 1:\n          rowLength = 4;\n          break;\n\n        case 2:\n          rowLength = 3;\n          break;\n\n        case 3:\n          rowLength = 2;\n          break;\n\n        case 4:\n          rowLength = 1;\n          break;\n\n        case 5:\n          rowLength = 0;\n          break;\n\n        default:\n          rowLength = 5;\n      }\n\n      console.log(\"rowLEGTH\", rowLength);\n\n      for (let i = 0; i < rowLength; i++) {\n        for (let j = 0; j < columnLength; j++) {\n          // Last\n          if (getBoard[rowLength - i][j] === 0) {\n            //\n            if (rowFindCase.includes(1)) {\n              let howMany1 = rowFindCase.filter(e => e === 1);\n              row = 5 - howMany1.length;\n              getBoard[row][column] = 1;\n            } else {\n              row = rowLength;\n              getBoard[rowLength][column] = 1;\n            }\n          } //\n\n\n          if (getBoard[row][column] === 1) {\n            i = rowLength;\n            j = columnLength;\n            break;\n          }\n        }\n      }\n\n      setBoard(getBoard);\n      setTurn(prevState => prevState + 1);\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n      console.log(getBoard);\n      handleClick({\n        row: 2,\n        column: 3\n      });\n    }\n  }, [turn, board]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tour : \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), board.length > 0 && board.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: e.map((f, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n        id: `button${i}-${j}`,\n        style: {\n          width: \"70px\",\n          height: \"70px\"\n        },\n        value: i,\n        name: j,\n        onClick: e => handleClick({\n          row: e.target.value,\n          column: e.target.name\n        })\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ap0XzacKSRFQC0TLmVGQhc/yqeE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elbardavid/Desktop/puissance4/src/App.js"],"names":["useState","useEffect","App","board","setBoard","humainCoup","setHumainCoup","iaCoup","setIaCoup","turn","setTurn","rows","columns","humain","ia","plateau","i","j","handleClick","e","player","console","log","row","column","getBoard","rowLength","columnLength","rowFindCase","length","foundFullRow","filter","includes","howMany1","prevState","button","document","getElementById","style","backgroundColor","map","display","f","width","height","target","value","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAMW,IAAI,GAAG,CAAb;AACA,QAAMC,OAAO,GAAG,CAAhB;AAEA,QAAMC,MAAM,GAAG,QAAf;AACA,QAAMC,EAAE,GAAG,KAAX,CAZa,CAcb;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAApB,EAA0BK,CAAC,EAA3B,EAA+B;AAC7BD,MAAAA,OAAO,CAACC,CAAD,CAAP,GAAa,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAApB,EAA6BK,CAAC,EAA9B,EAAkC;AAChCF,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWC,CAAX,IAAgB,CAAhB;AACD;AACF;;AACDb,IAAAA,QAAQ,CAACW,OAAD,CAAR;AACD,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AAGzB,QAAIC,MAAJ;;AAEE,QAAI,CAACX,IAAI,GAAG,CAAR,IAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxBW,MAAAA,MAAM,GAAG,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,MAAM,GAAG,CAAT;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAGF,QAAIG,GAAG,GAAGJ,CAAC,CAACI,GAAZ;AACA,QAAIC,MAAM,GAAGL,CAAC,CAACK,MAAf;AAEA,QAAIC,QAAQ,GAAG,CAAC,GAAGtB,KAAJ,CAAf,CAjByB,CAmBzB;;AACA,QAAIuB,SAAS,GAAG,CAAhB;AACA,QAAIC,YAAY,GAAG,CAAnB;;AAEA,QAAIxB,KAAK,CAACoB,GAAD,CAAL,CAAWC,MAAX,MAAuB,CAA3B,EAA8B;AAC5B;AACA,UAAII,WAAW,GAAG,EAAlB,CAF4B,CAG5B;;AACA,WAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,QAAQ,CAACI,MAA7B,EAAqCb,CAAC,EAAtC,EAA0C;AACxCY,QAAAA,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiBH,QAAQ,CAACT,CAAD,CAAR,CAAYQ,MAAZ,CAAjB,CAAd;AACD,OAN2B,CAQ5B;;;AACA,UAAIM,YAAY,GAAGL,QAAQ,CAACM,MAAT,CAChBZ,CAAD,IACEA,CAAC,CAAC,CAAD,CAAD,KAAS,CAAT,IACAA,CAAC,CAAC,CAAD,CAAD,KAAS,CADT,IAEAA,CAAC,CAAC,CAAD,CAAD,KAAS,CAFT,IAGAA,CAAC,CAAC,CAAD,CAAD,KAAS,CAHT,IAIAA,CAAC,CAAC,CAAD,CAAD,KAAS,CAJT,IAKAA,CAAC,CAAC,CAAD,CAAD,KAAS,CALT,IAMAA,CAAC,CAAC,CAAD,CAAD,KAAS,CARM,CAAnB;;AAWA,cAAQW,YAAY,CAACD,MAArB;AACE,aAAK,CAAL;AACEH,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF;AACEA,UAAAA,SAAS,GAAG,CAAZ;AApBJ;;AAuBAL,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,SAAxB;;AAEA,WAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,SAApB,EAA+BV,CAAC,EAAhC,EAAoC;AAClC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,YAApB,EAAkCV,CAAC,EAAnC,EAAuC;AACrC;AACA,cAAIQ,QAAQ,CAACC,SAAS,GAAGV,CAAb,CAAR,CAAwBC,CAAxB,MAA+B,CAAnC,EAAsC;AACpC;AACA,gBAAIW,WAAW,CAACI,QAAZ,CAAqB,CAArB,CAAJ,EAA6B;AAC3B,kBAAIC,QAAQ,GAAGL,WAAW,CAACG,MAAZ,CAAoBZ,CAAD,IAAOA,CAAC,KAAK,CAAhC,CAAf;AACAI,cAAAA,GAAG,GAAG,IAAIU,QAAQ,CAACJ,MAAnB;AACAJ,cAAAA,QAAQ,CAACF,GAAD,CAAR,CAAcC,MAAd,IAAwB,CAAxB;AACD,aAJD,MAIO;AACLD,cAAAA,GAAG,GAAGG,SAAN;AACAD,cAAAA,QAAQ,CAACC,SAAD,CAAR,CAAoBF,MAApB,IAA8B,CAA9B;AACD;AACF,WAZoC,CAarC;;;AACA,cAAIC,QAAQ,CAACF,GAAD,CAAR,CAAcC,MAAd,MAA0B,CAA9B,EAAiC;AAC/BR,YAAAA,CAAC,GAAGU,SAAJ;AACAT,YAAAA,CAAC,GAAGU,YAAJ;AACA;AACD;AACF;AACF;;AAEDvB,MAAAA,QAAQ,CAACqB,QAAD,CAAR;AAEAf,MAAAA,OAAO,CAAEwB,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAP;AAEA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAyB,SAAQd,GAAI,IAAGC,MAAO,EAA/C,CAAf;;AAEA,UAAIW,MAAJ,EAAY;AACV,YAAI,CAAC1B,IAAI,GAAG,CAAR,IAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxB;AACA0B,UAAAA,MAAM,CAACG,KAAP,CAAaC,eAAb,GAA+B,QAA/B;AACD,SAHD,MAGO;AACL;AACA;AACA;AACAJ,UAAAA,MAAM,CAACG,KAAP,CAAaC,eAAb,GAA+B,KAA/B;AACD;AACF;AACF;AACF,GA7GD;;AA+GAtC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,IAAI,GAAG,CAAR,IAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxBY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAFD,MAEK;AAEH,UAAIG,QAAQ,GAAG,CAAC,GAAGtB,KAAJ,CAAf;AAEAkB,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAEAP,MAAAA,WAAW,CAAC;AAACK,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,MAAM,EAAE;AAAjB,OAAD,CAAX;AACD;AAEF,GAZQ,EAYN,CAACf,IAAD,EAAON,KAAP,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,4BAAYM,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGN,KAAK,CAAC0B,MAAN,GAAe,CAAf,IACC1B,KAAK,CAACqC,GAAN,CAAU,CAACrB,CAAD,EAAIH,CAAJ,kBACR;AAAa,MAAA,KAAK,EAAE;AAAEyB,QAAAA,OAAO,EAAE;AAAX,OAApB;AAAA,gBACGtB,CAAC,CAACqB,GAAF,CAAM,CAACE,CAAD,EAAIzB,CAAJ,kBACL;AACE,QAAA,EAAE,EAAG,SAAQD,CAAE,IAAGC,CAAE,EADtB;AAEE,QAAA,KAAK,EAAE;AACL0B,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SAFT;AAOE,QAAA,KAAK,EAAE5B,CAPT;AAQE,QAAA,IAAI,EAAEC,CARR;AASE,QAAA,OAAO,EAAGE,CAAD,IACPD,WAAW,CAAC;AAAEK,UAAAA,GAAG,EAAEJ,CAAC,CAAC0B,MAAF,CAASC,KAAhB;AAAuBtB,UAAAA,MAAM,EAAEL,CAAC,CAAC0B,MAAF,CAASE;AAAxC,SAAD;AAVf,SAMO9B,CANP;AAAA;AAAA;AAAA;AAAA,cADD;AADH,OAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAnLQd,G;;KAAAA,G;AAqLT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [board, setBoard] = useState([]);\n\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n\n  const [turn, setTurn] = useState(0);\n\n  const rows = 6;\n  const columns = 7;\n\n  const humain = \"yellow\";\n  const ia = \"red\";\n\n  // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = (e) => {\n\n    \n    let player;\n\n      if ((turn - 1) % 2 === 0) {\n        player = 1;\n      } else {\n        player = 2;\n      }\n\n      console.log(player)\n\n\n    let row = e.row;\n    let column = e.column;\n\n    let getBoard = [...board];\n\n    // let rowLength = getBoard.length;\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = [];\n      //\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      }\n\n      // Check nombre de lignes déjà remplies\n      let foundFullRow = getBoard.filter(\n        (e) =>\n          e[0] === 1 &&\n          e[1] === 1 &&\n          e[2] === 1 &&\n          e[3] === 1 &&\n          e[4] === 1 &&\n          e[5] === 1 &&\n          e[6] === 1\n      );\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n        case 1:\n          rowLength = 4;\n          break;\n        case 2:\n          rowLength = 3;\n          break;\n        case 3:\n          rowLength = 2;\n          break;\n        case 4:\n          rowLength = 1;\n          break;\n        case 5:\n          rowLength = 0;\n          break;\n        default:\n          rowLength = 5;\n      }\n\n      console.log(\"rowLEGTH\", rowLength);\n\n      for (let i = 0; i < rowLength; i++) {\n        for (let j = 0; j < columnLength; j++) {\n          // Last\n          if (getBoard[rowLength - i][j] === 0) {\n            //\n            if (rowFindCase.includes(1)) {\n              let howMany1 = rowFindCase.filter((e) => e === 1);\n              row = 5 - howMany1.length;\n              getBoard[row][column] = 1;\n            } else {\n              row = rowLength;\n              getBoard[rowLength][column] = 1;\n            }\n          }\n          //\n          if (getBoard[row][column] === 1) {\n            i = rowLength;\n            j = columnLength;\n            break;\n          }\n        }\n      }\n\n      setBoard(getBoard);\n\n      setTurn((prevState) => prevState + 1);\n\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\")\n    }else{\n\n      let getBoard = [...board]\n\n      console.log(getBoard)\n\n      handleClick({row: 2, column: 3});\n    }\n\n  }, [turn, board]);\n\n  return (\n    <div className=\"App\">\n      <h2>Tour : {turn}</h2>\n      <br />\n      {board.length > 0 &&\n        board.map((e, i) => (\n          <div key={i} style={{ display: \"flex\" }}>\n            {e.map((f, j) => (\n              <button\n                id={`button${i}-${j}`}\n                style={{\n                  width: \"70px\",\n                  height: \"70px\",\n                }}\n                key={j}\n                value={i}\n                name={j}\n                onClick={(e) =>\n                  handleClick({ row: e.target.value, column: e.target.name })\n                }\n              ></button>\n            ))}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}