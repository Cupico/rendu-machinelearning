{"ast":null,"code":"var _jsxFileName = \"/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [turn, setTurn] = useState(0);\n  const rows = 6;\n  const columns = 7; // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = e => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = parseFloat(e.row);\n    let column = parseFloat(e.column); // const buttonCheck = document.getElementById(`button${row}-${column}`);\n    // if (buttonCheck && (buttonCheck.style.backgroundColor === \"red\" || buttonCheck.style.backgroundColor === \"yellow\")) {\n    //   setTurn(prevState => prevState + 1)\n    // }\n\n    let getBoard = [...board]; // let rowLength = getBoard.length;\n\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = []; //\n\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      } // Check nombre de lignes déjà remplies\n\n\n      let foundFullRow = getBoard.filter(e => e[0] !== 0 && e[1] !== 0 && e[2] !== 0 && e[3] !== 0 && e[4] !== 0 && e[5] !== 0 && e[6] !== 0);\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n\n        case 1:\n          rowLength = 4;\n          break;\n\n        case 2:\n          rowLength = 3;\n          break;\n\n        case 3:\n          rowLength = 2;\n          break;\n\n        case 4:\n          rowLength = 1;\n          break;\n\n        case 5:\n          rowLength = 0;\n          break;\n\n        default:\n          rowLength = 5;\n      }\n\n      for (let i = 0; i < rowLength; i++) {\n        for (let j = 0; j < columnLength; j++) {\n          // Last\n          if (getBoard[rowLength - i][j] === 0) {\n            //\n            if (rowFindCase.includes(1) || rowFindCase.includes(2)) {\n              let howMany1 = rowFindCase.filter(e => e !== 0);\n              row = 5 - howMany1.length;\n              getBoard[row][column] = player === 1 ? 1 : 2;\n              break;\n            } else {\n              row = rowLength;\n              getBoard[rowLength][column] = player === 1 ? 1 : 2;\n              break;\n            }\n          } // if (getBoard[row][column] !== 0) {\n          //   i = rowLength;\n          //   j = columnLength;\n          //   break;\n          // }\n\n        }\n      }\n\n      setBoard(getBoard);\n      setTurn(prevState => prevState + 1);\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n            i;\n\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n\n        return indexes;\n      };\n\n      let nextMove = {\n        row: null,\n        column: null\n      }; // --------------------------------- Find NEXT MOVE --------------------------------- \\\\\n      // function findNextMove() {\n      //   for (let x = 0; x < getBoard.length; x++) {\n      //     if (getBoard[x].includes(2)) {\n      //       let foundIndex = getAllIndexes(getBoard[x], 2);\n      //       for (let i = 0; i < foundIndex.length; i++) {\n      //         //LEFT\n      //         if (getBoard[x][foundIndex[i] - 1] === 0) {\n      //           nextMove.column = foundIndex[i] - 1;\n      //           nextMove.row = x;\n      //         } else if (\n      //           getBoard[x][foundIndex[i] - 1] !== 0 &&\n      //           getBoard[x][foundIndex[i] - 2] === 0\n      //         ) {\n      //           nextMove.column = foundIndex[i] - 2;\n      //           nextMove.row = x;\n      //           //RIGHT\n      //         } else if (getBoard[x][foundIndex[i] + 1] === 0) {\n      //           nextMove.column = foundIndex[i] + 1;\n      //           nextMove.row = x;\n      //         } else if (\n      //           getBoard[x][foundIndex[i] + 1] !== 0 &&\n      //           getBoard[x][foundIndex[i] + 2] === 0\n      //         ) {\n      //           nextMove.column = foundIndex[i] + 2;\n      //           nextMove.row = x;\n      //           //UP\n      //         } else if (getBoard[x - 1][i] === 0) {\n      //           nextMove.column = getBoard[x - 1][i];\n      //           nextMove.row = x - 1;\n      //         } else if (getBoard[x - 1][i] !== 0 && getBoard[x - 2][i] === 0) {\n      //           nextMove.column = getBoard[x - 2][i];\n      //           nextMove.row = x - 2;\n      //         } else if (getBoard[x - 1][i - 1] === 0) {\n      //           nextMove.column = getBoard[x - 1][i - 1];\n      //           nextMove.row = x - 1;\n      //         }\n      //       }\n      //     }\n      //   }\n      // }\n      // findNextMove();\n      // --------------------------------- DONT LOOSE BRO --------------------------------- \\\\\n\n      const dontLoose = () => {\n        let playerWin;\n\n        for (let x = 0; x < getBoard.length; x++) {\n          playerWin = getAllIndexes(getBoard[x], 1);\n\n          for (let y = 0; y < playerWin.length; y++) {\n            // Check Horizontal si 2 jetons d'affilés\n            if (getBoard[x][playerWin[y]] === getBoard[x][playerWin[y + 1]]) {\n              console.log('same???');\n\n              if (getBoard[x][playerWin[y - 1]] === 0) {\n                nextMove.column = y - 1;\n                nextMove.row = x;\n              }\n\n              if (getBoard[x][playerWin[y + 2]] === 0) {\n                nextMove.column = y + 2;\n                nextMove.row = x;\n              }\n            }\n          }\n        }\n      };\n\n      dontLoose(); // ----------------------------------------------------------------------------------- \\\\\n\n      console.log(\"left\", nextMove);\n\n      if (nextMove.column && nextMove.row) {\n        handleClick(nextMove);\n      } else {\n        handleClick({\n          row: 0,\n          column: 3\n        });\n      }\n    }\n  }, [turn, board]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tour : \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), board.length > 0 && board.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: e.map((f, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n        id: `button${i}-${j}`,\n        style: {\n          width: \"70px\",\n          height: \"70px\"\n        },\n        value: i,\n        name: j,\n        onClick: e => handleClick({\n          row: e.target.value,\n          column: e.target.name\n        })\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"D52ReQJdZ/wbAciB68oUB3Ep0P4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js"],"names":["useState","useEffect","App","board","setBoard","turn","setTurn","rows","columns","plateau","i","j","handleClick","e","player","console","log","row","parseFloat","column","getBoard","rowLength","columnLength","rowFindCase","length","foundFullRow","filter","includes","howMany1","prevState","button","document","getElementById","style","backgroundColor","getAllIndexes","arr","val","indexes","push","nextMove","dontLoose","playerWin","x","y","map","display","f","width","height","target","value","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [board, setBoard] = useState([]);\n\n  const [turn, setTurn] = useState(0);\n\n  const rows = 6;\n  const columns = 7;\n\n\n  // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = (e) => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = parseFloat(e.row);\n    let column = parseFloat(e.column);\n\n    // const buttonCheck = document.getElementById(`button${row}-${column}`);\n\n    // if (buttonCheck && (buttonCheck.style.backgroundColor === \"red\" || buttonCheck.style.backgroundColor === \"yellow\")) {\n    //   setTurn(prevState => prevState + 1)\n    // }\n\n    let getBoard = [...board];\n\n    // let rowLength = getBoard.length;\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = [];\n      //\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      }\n\n      // Check nombre de lignes déjà remplies\n      let foundFullRow = getBoard.filter(\n        (e) =>\n          e[0] !== 0 &&\n          e[1] !== 0 &&\n          e[2] !== 0 &&\n          e[3] !== 0 &&\n          e[4] !== 0 &&\n          e[5] !== 0 &&\n          e[6] !== 0\n      );\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n        case 1:\n          rowLength = 4;\n          break;\n        case 2:\n          rowLength = 3;\n          break;\n        case 3:\n          rowLength = 2;\n          break;\n        case 4:\n          rowLength = 1;\n          break;\n        case 5:\n          rowLength = 0;\n          break;\n        default:\n          rowLength = 5;\n      }\n\n      for (let i = 0; i < rowLength; i++) {\n        for (let j = 0; j < columnLength; j++) {\n          // Last\n          if (getBoard[rowLength - i][j] === 0) {\n            //\n            if (rowFindCase.includes(1) || rowFindCase.includes(2)) {\n              let howMany1 = rowFindCase.filter((e) => e !== 0);\n              row = 5 - howMany1.length;\n              getBoard[row][column] = player === 1 ? 1 : 2;\n              break;\n            } else {\n              row = rowLength;\n              getBoard[rowLength][column] = player === 1 ? 1 : 2;\n              break;\n            }\n          }\n\n          // if (getBoard[row][column] !== 0) {\n          //   i = rowLength;\n          //   j = columnLength;\n          //   break;\n          // }\n        }\n      }\n\n      setBoard(getBoard);\n\n      setTurn((prevState) => prevState + 1);\n\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n          i;\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n        return indexes;\n      };\n\n\n      let nextMove = {row: null, column: null}\n\n      // --------------------------------- Find NEXT MOVE --------------------------------- \\\\\n\n      // function findNextMove() {\n      //   for (let x = 0; x < getBoard.length; x++) {\n      //     if (getBoard[x].includes(2)) {\n      //       let foundIndex = getAllIndexes(getBoard[x], 2);\n\n      //       for (let i = 0; i < foundIndex.length; i++) {\n      //         //LEFT\n      //         if (getBoard[x][foundIndex[i] - 1] === 0) {\n      //           nextMove.column = foundIndex[i] - 1;\n      //           nextMove.row = x;\n      //         } else if (\n      //           getBoard[x][foundIndex[i] - 1] !== 0 &&\n      //           getBoard[x][foundIndex[i] - 2] === 0\n      //         ) {\n      //           nextMove.column = foundIndex[i] - 2;\n      //           nextMove.row = x;\n      //           //RIGHT\n      //         } else if (getBoard[x][foundIndex[i] + 1] === 0) {\n      //           nextMove.column = foundIndex[i] + 1;\n      //           nextMove.row = x;\n      //         } else if (\n      //           getBoard[x][foundIndex[i] + 1] !== 0 &&\n      //           getBoard[x][foundIndex[i] + 2] === 0\n      //         ) {\n      //           nextMove.column = foundIndex[i] + 2;\n      //           nextMove.row = x;\n      //           //UP\n      //         } else if (getBoard[x - 1][i] === 0) {\n      //           nextMove.column = getBoard[x - 1][i];\n      //           nextMove.row = x - 1;\n      //         } else if (getBoard[x - 1][i] !== 0 && getBoard[x - 2][i] === 0) {\n      //           nextMove.column = getBoard[x - 2][i];\n      //           nextMove.row = x - 2;\n      //         } else if (getBoard[x - 1][i - 1] === 0) {\n      //           nextMove.column = getBoard[x - 1][i - 1];\n      //           nextMove.row = x - 1;\n      //         }\n      //       }\n      //     }\n      //   }\n      // }\n\n      // findNextMove();\n\n      // --------------------------------- DONT LOOSE BRO --------------------------------- \\\\\n\n      const dontLoose = () => {\n          let playerWin;\n          for (let x = 0; x < getBoard.length; x++) {\n            playerWin = getAllIndexes(getBoard[x], 1);\n            for (let y = 0; y < playerWin.length; y++) {\n              // Check Horizontal si 2 jetons d'affilés\n              if(getBoard[x][playerWin[y]] === getBoard[x][playerWin[y + 1]]){\n                console.log('same???')\n                if(getBoard[x][playerWin[y - 1]] === 0){\n                  nextMove.column = y - 1\n                  nextMove.row = x\n                }\n                if(getBoard[x][playerWin[y + 2]] === 0){\n                  nextMove.column = y + 2\n                  nextMove.row = x\n                }\n              }\n          }\n        }\n      };\n\n      dontLoose();\n\n      // ----------------------------------------------------------------------------------- \\\\\n\n      console.log(\"left\", nextMove);\n      if (nextMove.column && nextMove.row) {\n        handleClick(nextMove);\n      } else{\n        handleClick({ row: 0, column: 3 });\n      }\n    }\n  }, [turn, board]);\n\n  return (\n    <div className=\"App\">\n      <h2>Tour : {turn}</h2>\n      <br />\n      {board.length > 0 &&\n        board.map((e, i) => (\n          <div key={i} style={{ display: \"flex\" }}>\n            {e.map((f, j) => (\n              <button\n                id={`button${i}-${j}`}\n                style={{\n                  width: \"70px\",\n                  height: \"70px\",\n                }}\n                key={j}\n                value={i}\n                name={j}\n                onClick={(e) =>\n                  handleClick({ row: e.target.value, column: e.target.name })\n                }\n              ></button>\n            ))}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}