{"ast":null,"code":"var _jsxFileName = \"/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n  const [turn, setTurn] = useState(0);\n  const rows = 6;\n  const columns = 7;\n  const humain = \"yellow\";\n  const ia = \"red\"; // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = e => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = parseFloat(e.row);\n    let column = parseFloat(e.column); // const buttonCheck = document.getElementById(`button${row}-${column}`);\n    // if (buttonCheck && (buttonCheck.style.backgroundColor === \"red\" || buttonCheck.style.backgroundColor === \"yellow\")) {\n    //   setTurn(prevState => prevState + 1)\n    // }\n\n    let getBoard = [...board]; // let rowLength = getBoard.length;\n\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = []; //\n\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      } // Check nombre de lignes déjà remplies\n\n\n      let foundFullRow = getBoard.filter(e => e[0] !== 0 && e[1] !== 0 && e[2] !== 0 && e[3] !== 0 && e[4] !== 0 && e[5] !== 0 && e[6] !== 0);\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n\n        case 1:\n          rowLength = 4;\n          break;\n\n        case 2:\n          rowLength = 3;\n          break;\n\n        case 3:\n          rowLength = 2;\n          break;\n\n        case 4:\n          rowLength = 1;\n          break;\n\n        case 5:\n          rowLength = 0;\n          break;\n\n        default:\n          rowLength = 5;\n      } // for (let i = 0; i < rowLength; i++) {\n      //   for (let j = 0; j < columnLength; j++) {\n      //     // Last\n      //     if (getBoard[rowLength - i][j] === 0) {\n      //       //\n      //       if (rowFindCase.includes(1) || rowFindCase.includes(2)) {\n      //         let howMany1 = rowFindCase.filter((e) => e !== 0);\n      //         row = 5 - howMany1.length;\n      //         getBoard[row][column] = player === 1 ? 1 : 2;\n      //         break;\n      //       } else {\n      //         row = rowLength;\n      //         getBoard[rowLength][column] = player === 1 ? 1 : 2;\n      //         break;\n      //       }\n      //     }\n      //     // if (getBoard[row][column] !== 0) {\n      //     //   i = rowLength;\n      //     //   j = columnLength;\n      //     //   break;\n      //     // }\n      //   }\n      // }\n\n\n      setBoard(getBoard);\n      setTurn(prevState => prevState + 1);\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n            i;\n\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n\n        return indexes;\n      };\n\n      let nextMove = {\n        row: null,\n        column: null\n      }; // --------------------------------- Find NEXT MOVE --------------------------------- \\\\\n\n      for (let x = 0; x < getBoard.length; x++) {\n        if (getBoard[x].includes(2)) {\n          let foundIndex = getAllIndexes(getBoard[x], 2);\n\n          for (let i = 0; i < foundIndex.length; i++) {\n            //UP\n            if (getBoard[x - 1][i] === 0) {\n              nextMove.column = getBoard[x - 1][i];\n              nextMove.row = x - 1;\n            } else if (getBoard[x - 1][i] !== 0 && getBoard[x - 2][i] === 0) {\n              nextMove.column = getBoard[x - 2][i];\n              nextMove.row = x - 2;\n            } //LEFT\n            else if (getBoard[x][foundIndex[i] - 1] === 0) {\n              nextMove.column = foundIndex[i] - 1;\n              nextMove.row = x;\n            } else if (getBoard[x][foundIndex[i] - 1] !== 0 && getBoard[x][foundIndex[i] - 2] === 0) {\n              nextMove.column = foundIndex[i] - 2;\n              nextMove.row = x; //RIGHT\n            } else if (getBoard[x][foundIndex[i] + 1] === 0) {\n              nextMove.column = foundIndex[i] + 1;\n              nextMove.row = x;\n            } else if (getBoard[x][foundIndex[i] + 1] !== 0 && getBoard[x][foundIndex[i] + 2] === 0) {\n              nextMove.column = foundIndex[i] + 2;\n              nextMove.row = x;\n            }\n          }\n        }\n      } // --------------------------------- DONT LOOSE BRO --------------------------------- \\\\\n      // const dontLoose = () => {\n      //     let playerWin;\n      //     for (let x = 0; x < getBoard.length; x++) {\n      //       playerWin = getAllIndexes(getBoard[x], 1);\n      //       for (let y = 0; y < playerWin.length; y++) {\n      //         // Check Horizontal si 2 jetons d'affilés\n      //         if(getBoard[x][playerWin[y]] === getBoard[x][playerWin[y + 1]]){\n      //           if(getBoard[x][playerWin[y - 1]] === 0){\n      //             nextMove.column = y - 1\n      //             nextMove.row = x\n      //           }\n      //           if(getBoard[x][playerWin[y + 2]] === 0){\n      //             nextMove.column = y + 2\n      //             nextMove.row = x\n      //           }\n      //         }\n      //         console.log(\"2 jeton d'affile \")\n      //     }\n      //   }\n      // };\n      // dontLoose();\n      // ----------------------------------------------------------------------------------- \\\\\n\n\n      console.log(\"left\", nextMove);\n\n      if (nextMove.column !== null && nextMove.row !== null) {\n        handleClick(nextMove);\n      } else {\n        handleClick({\n          row: 5,\n          column: 3\n        });\n      }\n    }\n  }, [turn, board]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tour : \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), board.length > 0 && board.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirectio: \"column\"\n      },\n      children: e.map((f, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n        id: `button${i}-${j}`,\n        style: {\n          width: \"70px\",\n          height: \"70px\"\n        },\n        value: i,\n        name: j,\n        onClick: e => handleClick({\n          row: e.target.value,\n          column: e.target.name\n        })\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ap0XzacKSRFQC0TLmVGQhc/yqeE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elbardavid/Desktop/MachineLearning/puissance4/src/App.js"],"names":["useState","useEffect","App","board","setBoard","humainCoup","setHumainCoup","iaCoup","setIaCoup","turn","setTurn","rows","columns","humain","ia","plateau","i","j","handleClick","e","player","console","log","row","parseFloat","column","getBoard","rowLength","columnLength","rowFindCase","length","foundFullRow","filter","prevState","button","document","getElementById","style","backgroundColor","getAllIndexes","arr","val","indexes","push","nextMove","x","includes","foundIndex","map","display","flexDirectio","f","width","height","target","value","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAMW,IAAI,GAAG,CAAb;AACA,QAAMC,OAAO,GAAG,CAAhB;AAEA,QAAMC,MAAM,GAAG,QAAf;AACA,QAAMC,EAAE,GAAG,KAAX,CAZa,CAcb;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAApB,EAA0BK,CAAC,EAA3B,EAA+B;AAC7BD,MAAAA,OAAO,CAACC,CAAD,CAAP,GAAa,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAApB,EAA6BK,CAAC,EAA9B,EAAkC;AAChCF,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWC,CAAX,IAAgB,CAAhB;AACD;AACF;;AACDb,IAAAA,QAAQ,CAACW,OAAD,CAAR;AACD,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAJ;;AAEA,QAAIX,IAAI,GAAG,CAAP,KAAa,CAAjB,EAAoB;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAF,MAAAA,MAAM,GAAG,CAAT;AACD,KAHD,MAGO;AACLA,MAAAA,MAAM,GAAG,CAAT;AACD;;AAED,QAAIG,GAAG,GAAGC,UAAU,CAACL,CAAC,CAACI,GAAH,CAApB;AACA,QAAIE,MAAM,GAAGD,UAAU,CAACL,CAAC,CAACM,MAAH,CAAvB,CAXyB,CAazB;AAEA;AACA;AACA;;AAEA,QAAIC,QAAQ,GAAG,CAAC,GAAGvB,KAAJ,CAAf,CAnByB,CAqBzB;;AACA,QAAIwB,SAAS,GAAG,CAAhB;AACA,QAAIC,YAAY,GAAG,CAAnB;;AAEA,QAAIzB,KAAK,CAACoB,GAAD,CAAL,CAAWE,MAAX,MAAuB,CAA3B,EAA8B;AAC5B;AACA,UAAII,WAAW,GAAG,EAAlB,CAF4B,CAG5B;;AACA,WAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,QAAQ,CAACI,MAA7B,EAAqCd,CAAC,EAAtC,EAA0C;AACxCa,QAAAA,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiBH,QAAQ,CAACV,CAAD,CAAR,CAAYS,MAAZ,CAAjB,CAAd;AACD,OAN2B,CAQ5B;;;AACA,UAAIM,YAAY,GAAGL,QAAQ,CAACM,MAAT,CAChBb,CAAD,IACEA,CAAC,CAAC,CAAD,CAAD,KAAS,CAAT,IACAA,CAAC,CAAC,CAAD,CAAD,KAAS,CADT,IAEAA,CAAC,CAAC,CAAD,CAAD,KAAS,CAFT,IAGAA,CAAC,CAAC,CAAD,CAAD,KAAS,CAHT,IAIAA,CAAC,CAAC,CAAD,CAAD,KAAS,CAJT,IAKAA,CAAC,CAAC,CAAD,CAAD,KAAS,CALT,IAMAA,CAAC,CAAC,CAAD,CAAD,KAAS,CARM,CAAnB;;AAWA,cAAQY,YAAY,CAACD,MAArB;AACE,aAAK,CAAL;AACEH,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF,aAAK,CAAL;AACEA,UAAAA,SAAS,GAAG,CAAZ;AACA;;AACF;AACEA,UAAAA,SAAS,GAAG,CAAZ;AApBJ,OApB4B,CA2C5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAvB,MAAAA,QAAQ,CAACsB,QAAD,CAAR;AAEAhB,MAAAA,OAAO,CAAEuB,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAP;AAEA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAyB,SAAQb,GAAI,IAAGE,MAAO,EAA/C,CAAf;;AAEA,UAAIS,MAAJ,EAAY;AACV,YAAI,CAACzB,IAAI,GAAG,CAAR,IAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxB;AACAyB,UAAAA,MAAM,CAACG,KAAP,CAAaC,eAAb,GAA+B,QAA/B;AACD,SAHD,MAGO;AACL;AACA;AACA;AACAJ,UAAAA,MAAM,CAACG,KAAP,CAAaC,eAAb,GAA+B,KAA/B;AACD;AACF;AACF;AACF,GA/GD;;AAiHArC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,IAAI,GAAG,CAAR,IAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxBY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAFD,MAEO;AACL,UAAII,QAAQ,GAAG,CAAC,GAAGvB,KAAJ,CAAf;;AAEA,YAAMoC,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClC,YAAIC,OAAO,GAAG,EAAd;AAAA,YACE1B,CADF;;AAEA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwB,GAAG,CAACV,MAApB,EAA4Bd,CAAC,EAA7B,EAAiC,IAAIwB,GAAG,CAACxB,CAAD,CAAH,KAAWyB,GAAf,EAAoBC,OAAO,CAACC,IAAR,CAAa3B,CAAb;;AACrD,eAAO0B,OAAP;AACD,OALD;;AAOA,UAAIE,QAAQ,GAAG;AAAErB,QAAAA,GAAG,EAAE,IAAP;AAAaE,QAAAA,MAAM,EAAE;AAArB,OAAf,CAVK,CAYL;;AAEA,WAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,QAAQ,CAACI,MAA7B,EAAqCe,CAAC,EAAtC,EAA0C;AACxC,YAAInB,QAAQ,CAACmB,CAAD,CAAR,CAAYC,QAAZ,CAAqB,CAArB,CAAJ,EAA6B;AAC3B,cAAIC,UAAU,GAAGR,aAAa,CAACb,QAAQ,CAACmB,CAAD,CAAT,EAAc,CAAd,CAA9B;;AAEA,eAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,UAAU,CAACjB,MAA/B,EAAuCd,CAAC,EAAxC,EAA4C;AAC1C;AACA,gBAAIU,QAAQ,CAACmB,CAAC,GAAG,CAAL,CAAR,CAAgB7B,CAAhB,MAAuB,CAA3B,EAA8B;AAC5B4B,cAAAA,QAAQ,CAACnB,MAAT,GAAkBC,QAAQ,CAACmB,CAAC,GAAG,CAAL,CAAR,CAAgB7B,CAAhB,CAAlB;AACA4B,cAAAA,QAAQ,CAACrB,GAAT,GAAesB,CAAC,GAAG,CAAnB;AACD,aAHD,MAGO,IAAInB,QAAQ,CAACmB,CAAC,GAAG,CAAL,CAAR,CAAgB7B,CAAhB,MAAuB,CAAvB,IAA4BU,QAAQ,CAACmB,CAAC,GAAG,CAAL,CAAR,CAAgB7B,CAAhB,MAAuB,CAAvD,EAA0D;AAC/D4B,cAAAA,QAAQ,CAACnB,MAAT,GAAkBC,QAAQ,CAACmB,CAAC,GAAG,CAAL,CAAR,CAAgB7B,CAAhB,CAAlB;AACA4B,cAAAA,QAAQ,CAACrB,GAAT,GAAesB,CAAC,GAAG,CAAnB;AACD,aAHM,CAIP;AAJO,iBAKF,IAAInB,QAAQ,CAACmB,CAAD,CAAR,CAAYE,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAA5B,MAAmC,CAAvC,EAA0C;AAC7C4B,cAAAA,QAAQ,CAACnB,MAAT,GAAkBsB,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAAlC;AACA4B,cAAAA,QAAQ,CAACrB,GAAT,GAAesB,CAAf;AACD,aAHI,MAGE,IACLnB,QAAQ,CAACmB,CAAD,CAAR,CAAYE,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAA5B,MAAmC,CAAnC,IACAU,QAAQ,CAACmB,CAAD,CAAR,CAAYE,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAA5B,MAAmC,CAF9B,EAGL;AACA4B,cAAAA,QAAQ,CAACnB,MAAT,GAAkBsB,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAAlC;AACA4B,cAAAA,QAAQ,CAACrB,GAAT,GAAesB,CAAf,CAFA,CAGA;AACD,aAPM,MAOA,IAAInB,QAAQ,CAACmB,CAAD,CAAR,CAAYE,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAA5B,MAAmC,CAAvC,EAA0C;AAC/C4B,cAAAA,QAAQ,CAACnB,MAAT,GAAkBsB,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAAlC;AACA4B,cAAAA,QAAQ,CAACrB,GAAT,GAAesB,CAAf;AACD,aAHM,MAGA,IACLnB,QAAQ,CAACmB,CAAD,CAAR,CAAYE,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAA5B,MAAmC,CAAnC,IACAU,QAAQ,CAACmB,CAAD,CAAR,CAAYE,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAA5B,MAAmC,CAF9B,EAGL;AACA4B,cAAAA,QAAQ,CAACnB,MAAT,GAAkBsB,UAAU,CAAC/B,CAAD,CAAV,GAAgB,CAAlC;AACA4B,cAAAA,QAAQ,CAACrB,GAAT,GAAesB,CAAf;AACD;AACF;AACF;AACF,OAlDI,CAoDL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBsB,QAApB;;AACA,UAAIA,QAAQ,CAACnB,MAAT,KAAoB,IAApB,IAA4BmB,QAAQ,CAACrB,GAAT,KAAiB,IAAjD,EAAuD;AACrDL,QAAAA,WAAW,CAAC0B,QAAD,CAAX;AACD,OAFD,MAEO;AACL1B,QAAAA,WAAW,CAAC;AAAEK,UAAAA,GAAG,EAAE,CAAP;AAAUE,UAAAA,MAAM,EAAE;AAAlB,SAAD,CAAX;AACD;AACF;AACF,GAzFQ,EAyFN,CAAChB,IAAD,EAAON,KAAP,CAzFM,CAAT;AA2FA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,4BAAYM,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGN,KAAK,CAAC2B,MAAN,GAAe,CAAf,IACC3B,KAAK,CAAC6C,GAAN,CAAU,CAAC7B,CAAD,EAAIH,CAAJ,kBACR;AAAa,MAAA,KAAK,EAAE;AAAEiC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,YAAY,EAAC;AAAhC,OAApB;AAAA,gBACG/B,CAAC,CAAC6B,GAAF,CAAM,CAACG,CAAD,EAAIlC,CAAJ,kBACL;AACE,QAAA,EAAE,EAAG,SAAQD,CAAE,IAAGC,CAAE,EADtB;AAEE,QAAA,KAAK,EAAE;AACLmC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SAFT;AAOE,QAAA,KAAK,EAAErC,CAPT;AAQE,QAAA,IAAI,EAAEC,CARR;AASE,QAAA,OAAO,EAAGE,CAAD,IACPD,WAAW,CAAC;AAAEK,UAAAA,GAAG,EAAEJ,CAAC,CAACmC,MAAF,CAASC,KAAhB;AAAuB9B,UAAAA,MAAM,EAAEN,CAAC,CAACmC,MAAF,CAASE;AAAxC,SAAD;AAVf,SAMOvC,CANP;AAAA;AAAA;AAAA;AAAA,cADD;AADH,OAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAlQQd,G;;KAAAA,G;AAoQT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [board, setBoard] = useState([]);\n\n  const [humainCoup, setHumainCoup] = useState([]);\n  const [iaCoup, setIaCoup] = useState([]);\n\n  const [turn, setTurn] = useState(0);\n\n  const rows = 6;\n  const columns = 7;\n\n  const humain = \"yellow\";\n  const ia = \"red\";\n\n  // const turn = \"humain\";\n\n  useEffect(() => {\n    let plateau = [];\n\n    for (let i = 0; i < rows; i++) {\n      plateau[i] = [];\n      for (let j = 0; j < columns; j++) {\n        plateau[i][j] = 0;\n      }\n    }\n    setBoard(plateau);\n  }, []);\n\n  const handleClick = (e) => {\n    let player;\n\n    if (turn % 2 === 0) {\n      console.log(\"PAIR ?\");\n      player = 1;\n    } else {\n      player = 2;\n    }\n\n    let row = parseFloat(e.row);\n    let column = parseFloat(e.column);\n\n    // const buttonCheck = document.getElementById(`button${row}-${column}`);\n\n    // if (buttonCheck && (buttonCheck.style.backgroundColor === \"red\" || buttonCheck.style.backgroundColor === \"yellow\")) {\n    //   setTurn(prevState => prevState + 1)\n    // }\n\n    let getBoard = [...board];\n\n    // let rowLength = getBoard.length;\n    let rowLength = 5;\n    let columnLength = 6;\n\n    if (board[row][column] === 0) {\n      //\n      let rowFindCase = [];\n      //\n      for (let i = 0; i < getBoard.length; i++) {\n        rowFindCase = [...rowFindCase, getBoard[i][column]];\n      }\n\n      // Check nombre de lignes déjà remplies\n      let foundFullRow = getBoard.filter(\n        (e) =>\n          e[0] !== 0 &&\n          e[1] !== 0 &&\n          e[2] !== 0 &&\n          e[3] !== 0 &&\n          e[4] !== 0 &&\n          e[5] !== 0 &&\n          e[6] !== 0\n      );\n\n      switch (foundFullRow.length) {\n        case 0:\n          rowLength = 5;\n          break;\n        case 1:\n          rowLength = 4;\n          break;\n        case 2:\n          rowLength = 3;\n          break;\n        case 3:\n          rowLength = 2;\n          break;\n        case 4:\n          rowLength = 1;\n          break;\n        case 5:\n          rowLength = 0;\n          break;\n        default:\n          rowLength = 5;\n      }\n\n      // for (let i = 0; i < rowLength; i++) {\n      //   for (let j = 0; j < columnLength; j++) {\n      //     // Last\n      //     if (getBoard[rowLength - i][j] === 0) {\n      //       //\n      //       if (rowFindCase.includes(1) || rowFindCase.includes(2)) {\n      //         let howMany1 = rowFindCase.filter((e) => e !== 0);\n      //         row = 5 - howMany1.length;\n      //         getBoard[row][column] = player === 1 ? 1 : 2;\n      //         break;\n      //       } else {\n      //         row = rowLength;\n      //         getBoard[rowLength][column] = player === 1 ? 1 : 2;\n      //         break;\n      //       }\n      //     }\n\n      //     // if (getBoard[row][column] !== 0) {\n      //     //   i = rowLength;\n      //     //   j = columnLength;\n      //     //   break;\n      //     // }\n      //   }\n      // }\n\n      setBoard(getBoard);\n\n      setTurn((prevState) => prevState + 1);\n\n      const button = document.getElementById(`button${row}-${column}`);\n\n      if (button) {\n        if ((turn - 1) % 2 === 0) {\n          //pair\n          button.style.backgroundColor = \"yellow\";\n        } else {\n          // let rowIA = 3;\n          // let columnIA = 5;\n          // handleClick({row: rowIA, column: columnIA})\n          button.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if ((turn - 1) % 2 !== 0) {\n      console.log(\"A MOI\");\n    } else {\n      let getBoard = [...board];\n\n      const getAllIndexes = (arr, val) => {\n        var indexes = [],\n          i;\n        for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n        return indexes;\n      };\n\n      let nextMove = { row: null, column: null };\n\n      // --------------------------------- Find NEXT MOVE --------------------------------- \\\\\n\n      for (let x = 0; x < getBoard.length; x++) {\n        if (getBoard[x].includes(2)) {\n          let foundIndex = getAllIndexes(getBoard[x], 2);\n\n          for (let i = 0; i < foundIndex.length; i++) {\n            //UP\n            if (getBoard[x - 1][i] === 0) {\n              nextMove.column = getBoard[x - 1][i];\n              nextMove.row = x - 1;\n            } else if (getBoard[x - 1][i] !== 0 && getBoard[x - 2][i] === 0) {\n              nextMove.column = getBoard[x - 2][i];\n              nextMove.row = x - 2;\n            }\n            //LEFT\n            else if (getBoard[x][foundIndex[i] - 1] === 0) {\n              nextMove.column = foundIndex[i] - 1;\n              nextMove.row = x;\n            } else if (\n              getBoard[x][foundIndex[i] - 1] !== 0 &&\n              getBoard[x][foundIndex[i] - 2] === 0\n            ) {\n              nextMove.column = foundIndex[i] - 2;\n              nextMove.row = x;\n              //RIGHT\n            } else if (getBoard[x][foundIndex[i] + 1] === 0) {\n              nextMove.column = foundIndex[i] + 1;\n              nextMove.row = x;\n            } else if (\n              getBoard[x][foundIndex[i] + 1] !== 0 &&\n              getBoard[x][foundIndex[i] + 2] === 0\n            ) {\n              nextMove.column = foundIndex[i] + 2;\n              nextMove.row = x;\n            }\n          }\n        }\n      }\n\n      // --------------------------------- DONT LOOSE BRO --------------------------------- \\\\\n\n      // const dontLoose = () => {\n      //     let playerWin;\n      //     for (let x = 0; x < getBoard.length; x++) {\n      //       playerWin = getAllIndexes(getBoard[x], 1);\n      //       for (let y = 0; y < playerWin.length; y++) {\n      //         // Check Horizontal si 2 jetons d'affilés\n      //         if(getBoard[x][playerWin[y]] === getBoard[x][playerWin[y + 1]]){\n      //           if(getBoard[x][playerWin[y - 1]] === 0){\n      //             nextMove.column = y - 1\n      //             nextMove.row = x\n      //           }\n      //           if(getBoard[x][playerWin[y + 2]] === 0){\n      //             nextMove.column = y + 2\n      //             nextMove.row = x\n      //           }\n      //         }\n      //         console.log(\"2 jeton d'affile \")\n      //     }\n      //   }\n      // };\n\n      // dontLoose();\n\n      // ----------------------------------------------------------------------------------- \\\\\n\n      console.log(\"left\", nextMove);\n      if (nextMove.column !== null && nextMove.row !== null) {\n        handleClick(nextMove);\n      } else {\n        handleClick({ row: 5, column: 3 });\n      }\n    }\n  }, [turn, board]);\n\n  return (\n    <div className=\"App\">\n      <h2>Tour : {turn}</h2>\n      <br />\n      {board.length > 0 &&\n        board.map((e, i) => (\n          <div key={i} style={{ display: \"flex\", flexDirectio:\"column\" }}>\n            {e.map((f, j) => (\n              <button\n                id={`button${i}-${j}`}\n                style={{\n                  width: \"70px\",\n                  height: \"70px\",\n                }}\n                key={j}\n                value={i}\n                name={j}\n                onClick={(e) =>\n                  handleClick({ row: e.target.value, column: e.target.name })\n                }\n              ></button>\n            ))}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}